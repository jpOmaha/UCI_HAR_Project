rm(list = ls())

# The file contains 8 3-d signals (=24) plus 9 magnitude-of-signal measures, = 33 measures, * 2, for 30 subjects on 6 activities each
# download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile="Course3Project", mode="wb")
# ERROR, change https ==> http
download.file("http://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip", destfile="Course3Project", mode="wb")
# ls()
# character(0)
setwd("~/Desktop/JHU DS Certif/UCI HAR Dataset")
unzip("Course3Project", list=T)
# Lists 32 Files, unzips none
unzip("Course3Project", list=F, exdir = "Course3ProjectUnzipped")
# Places 32 files into wd
test_y_test <- read.table("test/y_test.txt")                       # dim(test_y_test)              # 2947    1
test_X_test <- read.table("test/X_test.txt")                       # dim(test_X_test)              # 2947  561
test_subject_test <- read.table("test/subject_test.txt")           # dim(test_subject_test)        # 2947    1
train_y_train <- read.table("train/y_train.txt")                   # dim(train_y_train)            # 7352    1
train_X_train <- read.table("train/X_train.txt")                   # dim(train_X_train)            # 7352  561
train_subject_train <- read.table("train/subject_train.txt")       # dim(train_subject_train)      # 7352    1
train <- cbind(train_subject_train, train_y_train, train_X_train)  # dim(train)                    # 7352  563
test <- cbind(test_subject_test, test_y_test, test_X_test)         # dim(test)                     # 2947  563
#
data <- rbind(train, test)                                         # dim(data)                   # 10299   563
labels <- read.table("features.txt")
colnames(data)[3:563]<-as.vector(labels[,2])         # View(data)
colnames(data)[1:2] <- c("subject", "activity") #  head(data[1:5,1:5])     #colnames(tidy_averages)[2] <- "activity"
mean_data <- data[ , grep("mean", colnames(data))]
std_data <- data[ , grep("std", colnames(data))]
moments_data <- cbind(data[ ,1:2], mean_data, std_data) # So named because columns limited to first 2 moments (mean & std)
# colnames(moments_data)     # summary(moments_data[ , 1:3])      # dim(moments_data)            # 10299    81
class(moments_data)                             #  "data.frame"
# colnames(moments_data)         # Remove the 13 "meanFreq" variables:
# "Mean Frequency is a weighted average of the frequency components, producing a mean frequency." 
mean_std_data <- moments_data[ , -(grep(paste0( "meanFreq()"), colnames(moments_data), perl=T))]
# dim(mean_std_data)                                                                            #   10299    68
#
# Finally, construction of a "Tidy Dataset"
# Rows = 30 subjects BY 6 activities = 180 records, AND Columns =  subject + activity + 66 AVERAGES
library(reshape)
md <- melt(mean_std_data, id=(c("subject", "activity")))
dim(md)                                           # 679734      4       NOTE: 679,734 = 10,299 ROWS * 66 Variable Columns
tidy_averages <- cast(md, subject + activity ~ variable, fun.aggregate = mean)
dim(tidy_averages)                        #      [1] 180  68
#
require(plyr)
tidy_averages[ ,2] <- as.factor(tidy_averages[ ,2])
tidy_averages[ ,2] <- revalue(tidy_averages[ ,2], c("1"="walk", "2"="walk_up_stairs", "3"="walk_down_stairs", "4"="sit", "5"="stand", "6"="lay"))
tidy_averages[sample(1:180, 5), 1:5]              # Testing all is well by randomly sampling 5 rows, displaying first 5 columns
# write.table(tidy_averages, "tidy_averages.txt")               ### UGLY FORMAT
options(max.print=999999)
capture.output( print(tidy_averages, print.gap=3), file="UCI.HAR.JP.tidy.averages.txt")
#
require(knitr)
# Open ReadMe.txt in a text editor and save it as ReadMe.md. 
# For markdown formatting you will want an extra blank line between paragraphs, 
# but it does mean you can take advantage of all the markdown formatting options.knit("ReadMe.rmd","Readme.md")
# knit("ReadMe.rmd","Readme.md")
# knit("codebook.rmd","codebook.md")

